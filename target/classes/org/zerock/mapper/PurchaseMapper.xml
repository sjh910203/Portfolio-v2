<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="org.zerock.mapper.PurchaseMapper">
 
 	<resultMap type="org.zerock.domain.CartVO" id="cartMap">
 		<id property="cartNo" column="cartNo" />
 		<result property="mno" column="mNo" />
 		<result property="pno" column="pNo" />
 		<result property="amount" column="amount" />
 		
 		<association property="products" resultMap="productsMap" />
 	</resultMap>
 
 	<resultMap type="org.zerock.domain.ProductsVO" id="productsMap">
 		<id property="productsNo" column="productsNo" />
 		<result property="productsName" column="productsName" />
 		<result property="price" column="price" />
 		<result property="explain" column="explain" />
 		<result property="productsType" column="productsType" />
 		<result property="animalType" column="animalType" />
 		<result property="brand" column="brand" />
 		
 		<collection property="attachList" resultMap="attachMap" />
 	</resultMap>
 
 	<resultMap type="org.zerock.domain.ProductsAttachVO" id="attachMap">
 		<id property="uuid" column="uuid" />
 		<result property="uploadPath" column="uploadPath" />
 		<result property="fileName" column="fileName" />
 		<result property="imageType" column="imageType" />
 		<result property="productsNo" column="productsNo" />
 	</resultMap>
 
 	<resultMap type="org.zerock.domain.OrderLogVO" id="orderLogMap">
 		<id property="logNo" column="logNo" />
 		<result property="pno" column="pno" />
 		<result property="mno" column="mno" />
 		<result property="payAmount" column="payAmount" />
 		<result property="payPrice" column="payPrice" />
 		<result property="payMethod" column="payMethod" />
 		<result property="payStatus" column="payStatus" />
 		<result property="payDate" column="payDate" />
 		<result property="renewalDate" column="renewalDate" />
 		<result property="expressStatus" column="expressStatus" />
 		
 		<association property="products" resultMap="productsMap" />
 	</resultMap>

 	<select id="goCart" resultMap="cartMap">
 		<![CDATA[
	 		select 
	 			p.productsNo, p.productsName, p.price, 
	 			c.cartNo, c.amount,
	 			a.uuid, a.uploadPath, a.fileName, a.imageType
	 		from 
	 			products p, cart c, products_attach a
	 		where 
	 			p.productsNo = c.pNo
	 			and
	 			c.pNo = a.productsNo
	 			and
	 			c.mNo = #{mno}
 		]]>
 	</select>

 	<!-- 장바구니 안에 중복 된 상품이 있는지 체크 -->
 	<select id="checkProductsInCart" resultMap="cartMap">
 		select * from cart where mNo = #{mno} and pNo = #{pno}
 	</select>
 
 	<insert id="addCart">
 		<selectKey keyProperty="cartNo" order="BEFORE" resultType="long">
 			select seq_cart.nextval from dual
 		</selectKey>
 		
 		insert into 
 			cart (cartNo, mNo, pNo, amount)
 		values 
 			(#{cartNo}, #{mno}, #{pno}, #{amount})
 	</insert>
 
 	<update id="updateCartItem">
 		update 
 			cart
 		set 
 			amount = #{amount}
 		where 
 			mNo = #{mno} and pNo = #{pno}
 	</update>
 	
 	<delete id="deleteCartItem">
 		delete from 
 			cart
 		where
 			cartNo = #{cartNo}
 	</delete>
 
	<delete id="deleteCartForMember">
 		delete from 
 			cart
 		where mNo = #{mNo}
 	</delete>
 	
 	<delete id="deleteOrderLog">
 		delete from 
 			order_log
 		where
 			mno = #{mno}
 	</delete>
 	
 	<insert id="insertOrderLog">
 		<selectKey keyProperty="logNo" order="BEFORE" resultType="long">
 			select seq_order.nextval from dual
 		</selectKey>
 		
 		insert into 
 			order_log 
 			(logNo, pno, mno, payAmount, payPrice, payMethod, payStatus, 
 			payDate, expressStatus)
 		values 
 			(#{logNo}, #{pno}, #{mno}, #{payAmount}, #{payPrice}, #{payMethod}, #{payStatus}, 
 			sysdate, #{expressStatus})
 	</insert>
 	
 	<select id="orderLogInfo" resultMap="orderLogMap">
 		<![CDATA[
 			select *
 			from 
 				order_log o, products p, products_attach a
 			where 
 				o.pno = p.productsNo
 				and
 				o.pno = a.productsNo
 				and
 				mno = #{mno}
 			order by payDate DESC
 		]]>
 	</select>
 	
 	<update id="updateLog">
 		update order_log
 		set	payStatus = #{payStatus},
 			renewalDate = TO_DATE('#{renewalDate}', 'MM-DD-YYYY'),
 			expressStatus = #{expressStatus}
 		where mno = #{mno}
 			  and
 			  logNo = #{logNo}
 	</update>
 	
 	<!-- 환불 -->
 	<insert id="refundLog">
 		insert into (payStatus, renewalDate, expressStatus) 
 		values (#{payStatus}, #{renewalDate}, #{expressStatus})
 	</insert>
 </mapper>